---
title: "housing"
output:
  word_document: default
  html_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(leaps)
library(car)
library(lmtest)
library(sandwich)
```

## Data exploration and data cleaning
### Read the data set and summarize the data set
```{r}
housingDF <- read.csv("housing.csv")
summary(housingDF)
str(housingDF)
```
Looking at the summary of the dataset, there are some problems:
- total_rooms, total_bedrooms, population, households, median_income seems to be skewed -> create a histogram to see the distribution
- ocean_proximity should be a categorical variable -> change the data type
- NAs value in total_bedrooms -> remove

### Data cleaning
```{r}
housingDF$ocean_proximity <- as.factor(housingDF$ocean_proximity)
housingDF <- na.omit(housingDF)
```

### Create histograms to see the distribution
```{r}
housingDF %>% ggplot(aes(total_rooms)) +
  geom_histogram() + 
  labs(title = "Distribution of total_rooms")

housingDF %>% ggplot(aes(total_bedrooms)) +
  geom_histogram() +
  labs(title = "Distribution of total_bedrooms")

housingDF %>% ggplot(aes(population)) +
  geom_histogram() + 
  labs(title = "Distribution of population")

housingDF %>% ggplot(aes(households)) +
  geom_histogram() +
  labs(title = "Distribution of households")

housingDF %>% ggplot(aes(median_income)) +
  geom_histogram() +
  labs(title = "Distribution of median_income")
```
Those are highly skewed, except for median_income, so we will try to use log transformation on those.

### Log transformation
```{r}
housingDF2 <- housingDF %>% 
  mutate(logTotalRooms = log(total_rooms), logTotalBedrooms = log(total_bedrooms), logPopulation = log(population), logHouseholds = log(households)) %>%
  select(!total_rooms) %>%
  select(!total_bedrooms) %>%
  select(!population) %>%
  select(!households) 

housingDF2 %>% ggplot(aes(logTotalRooms)) +
  geom_histogram() + 
  labs(title = "Distribution of logTotalRooms")

housingDF2 %>% ggplot(aes(logTotalBedrooms)) +
  geom_histogram() +
  labs(title = "Distribution of logTotalBedrooms")

housingDF2 %>% ggplot(aes(logPopulation)) +
  geom_histogram() + 
  labs(title = "Distribution of logPopulation")

housingDF2 %>% ggplot(aes(logHouseholds)) +
  geom_histogram() +
  labs(title = "Distribution of logHouseholds")
```

Those looks significantly better.

### Create training set and test set
```{r}
N <- seq(20433)
S <- sample(N,10217)
housingtrain <- housingDF2[S,]
housingtest <- housingDF2[-S , ]
summary(housingtest)
summary(housingtrain)
```

## Building model
### Using stepwise selection
```{r}
null <- lm(median_house_value~1, housingtrain)
full <- lm(median_house_value~., housingtrain)
step(null, scope=list(lower=null, upper=full),direction="forward")
```
The stepwise selection advised us to choose all variables.

### Regression model based on stepwise selection
```{r}
reg1 <- lm(median_house_value ~ median_income + ocean_proximity + 
    housing_median_age + logTotalBedrooms + logPopulation + logTotalRooms + 
    logHouseholds + longitude + latitude, housingtrain)
summary(reg1)
```
Looking at model 1, the p-value for ocean_proximityNEAR OCEAN and ocean_proximityISLAND is not statistically significant (0.6077 > 0.05, 0.455 > 0.05). So we will remove it to see if it significantly changes the R-squared.

```{r}
reg2 <- lm(median_house_value ~ median_income + housing_median_age + logTotalBedrooms + logPopulation + logTotalRooms + logHouseholds + longitude + latitude, housingtrain)
summary(reg2)
```
The Adjusted R-squared slightly decreases but not too much. 0.6545 is a good R-squared but we will try to improve our model. Ocean-proximity may affect the coeffecients of longitude and latitude so we will try to improve our model by examining the possiblities of adding interaction terms to our model. We will try to look into the relationship between variables.

### Examine the relationship between variables by correlation matrix
```{r}
housingtrain1 <- housingtrain %>%
  select(!ocean_proximity)
cor(housingtrain1)
```
There seems to be problems with multicolinearity between longitude and latitude (-0.922), total rooms and total bedrooms (0.946), total rooms and households (0.93), total bedrooms and households (0.972), population and households (0.938). We will try to find the best subsets and remove the variables accordingly

### Best subsets

```{r}
best.subset <- regsubsets(median_house_value~.,housingtrain1)
sum <- summary(best.subset)
sum$outmat

```
The best subset indicates that we should remove households and total rooms

```{r}
housingtrain1 <- housingtrain1 %>%
  select(!logTotalRooms) %>%
  select(!logHouseholds)
plot(housingtrain1)
```


```{r}
housingtrain1 %>% ggplot(aes(median_income,median_house_value)) +
  geom_point() + 
  geom_smooth() + 
  labs(title = 'Relationship between \n median_income and median_house_value') +
  theme(plot.title = element_text(hjust = 0.5))
housingtrain1 %>% ggplot(aes(logPopulation,median_house_value)) +
  geom_point() + 
  geom_smooth() +
  labs(title = 'Relationship between \n logPopulation and median_house_value') +
  theme(plot.title = element_text(hjust = 0.5))
housingtrain1 %>% ggplot(aes(logTotalBedrooms,median_house_value)) +
  geom_point() + 
  geom_smooth() +
  labs(title = 'Relationship between \n logTotalBedrooms and median_house_value') +
  theme(plot.title = element_text(hjust = 0.5))
housingtrain1 %>% ggplot(aes(housing_median_age,median_house_value)) +
  geom_point() + 
  geom_smooth() +
  labs(title = 'Relationship between \n housing_median_age and median_house_value') +
  theme(plot.title = element_text(hjust = 0.5))
housingtrain1 %>% ggplot(aes(latitude,median_house_value)) +
  geom_point() + 
  geom_smooth() +
  labs(title = 'Relationship between \n latitude and median_house_value') +
  theme(plot.title = element_text(hjust = 0.5))
housingtrain1 %>% ggplot(aes(longitude,median_house_value)) +
  geom_point() + 
  geom_smooth() +
  labs(title = 'Relationship between \n longitude and median_house_value') +
  theme(plot.title = element_text(hjust = 0.5))
```
From the plots, we will add median_income^2, median_income^3, population^2, logTotalBedrooms^2, latitude^3, longitude^3 to our model. 

### Regression models based on relationship and correlation
```{r}
reg3 <- lm(median_house_value ~ median_income + housing_median_age + logPopulation + logTotalRooms + longitude + latitude, housingtrain)
summary(reg3)
#+ 
```
Removing households and total rooms significantly lowers the R-squared. Also, we only want the best prediction instead of paying attention to the coefficients of each independent variable. Given the pros and cons, we may not necessarily remove these two variables. We will continue to add some new variables to improve our model.

```{r}
reg4 <- lm(median_house_value ~ median_income + housing_median_age + logTotalBedrooms + logPopulation + logTotalRooms + logHouseholds + longitude + latitude + I(median_income^2) + I(median_income^3) + I(logPopulation^2) + I(logTotalBedrooms^2) + I(latitude^3) + I(longitude^3), housingtrain)
summary(reg4)
```
Removing logPopulation, logTotalBedrooms

```{r}
reg5 <- lm(median_house_value ~ median_income + housing_median_age + logTotalRooms + logHouseholds + longitude + latitude + I(median_income^2) + I(median_income^3) + I(logPopulation^2) + I(logTotalBedrooms^2) + I(latitude^3) + I(longitude^3), housingtrain)
summary(reg5)
```
After removing the logPopulation and logTotalBedrooms, R-squared doesn't decrease but all the p-values are now significantly. We will keep trying to improve our model using interaction plots.

### Interaction plots

We see that longitude, latitude and ocean_proximity all relate to location. Thus, we will create some interaction plots to see if we could add these as interaction terms to our model.
```{r}
housingtrain %>% filter(ocean_proximity == 'INLAND') %>%
  ggplot(aes(latitude,median_house_value)) + geom_point() + geom_smooth() + 
  labs(title = "Relationship between latitude and median_house_value \n with ocean_proximity being 'INLAND'") +
  theme(plot.title = element_text(hjust = 0.5))

housingtrain %>% filter(ocean_proximity == 'NEAR BAY') %>%
  ggplot(aes(latitude,median_house_value)) + geom_point() + geom_smooth() + 
  labs(title = "Relationship between latitude and median_house_value \n with ocean_proximity being 'NEAR BAY'") +
  theme(plot.title = element_text(hjust = 0.5))

housingtrain %>% filter(ocean_proximity == 'NEAR OCEAN') %>%
  ggplot(aes(latitude,median_house_value)) + geom_point() + geom_smooth() + 
  labs(title = "Relationship between latitude and median_house_value \n with ocean_proximity being 'NEAR OCEAN'") +
  theme(plot.title = element_text(hjust = 0.5))

housingtrain %>% filter(ocean_proximity == 'ISLAND') %>%
  ggplot(aes(latitude,median_house_value)) + geom_point() + geom_smooth() + 
  labs(title = "Relationship between latitude and median_house_value \n with ocean_proximity being 'ISLAND'") +
  theme(plot.title = element_text(hjust = 0.5))

housingtrain %>% filter(ocean_proximity == '<1H OCEAN') %>%
  ggplot(aes(latitude,median_house_value)) + geom_point() + geom_smooth() + 
  labs(title = "Relationship between latitude and median_house_value \n with ocean_proximity being '<1H OCEAN'") +
  theme(plot.title = element_text(hjust = 0.5))

```
```{r}
housingtrain %>% 
  ggplot(aes(latitude,ocean_proximity)) + geom_point() + geom_smooth() +
  labs(title = 'Relationship between \n ocean_proximity and latitude') +
  theme(plot.title = element_text(hjust = 0.5))
```
The slope of latitude changes with different categories of ocean_proximity. Latitude and ocean_proximity seem not to be correlated. Thus we will add this interaction term to our model. 

```{r}
housingtrain %>% filter(ocean_proximity == 'INLAND') %>%
  ggplot(aes(longitude,median_house_value)) + geom_point() + geom_smooth() +
  labs(title = "Relationship between longitude and median_house_value \n with ocean_proximity being 'INLAND'") +
  theme(plot.title = element_text(hjust = 0.5))

housingtrain %>% filter(ocean_proximity == 'NEAR BAY') %>%
  ggplot(aes(longitude,median_house_value)) + geom_point() + geom_smooth() +
  labs(title = "Relationship between longitude and median_house_value \n with ocean_proximity being 'NEAR BAY'") +
  theme(plot.title = element_text(hjust = 0.5))

housingtrain %>% filter(ocean_proximity == 'NEAR OCEAN') %>%
  ggplot(aes(longitude,median_house_value)) + geom_point() + geom_smooth() +
  labs(title = "Relationship between longitude and median_house_value \n with ocean_proximity being 'NEAR OCEAN'") +
  theme(plot.title = element_text(hjust = 0.5))

housingtrain %>% filter(ocean_proximity == 'ISLAND') %>%
  ggplot(aes(longitude,median_house_value)) + geom_point() + geom_smooth() +
  labs(title = "Relationship between longitude and median_house_value \n with ocean_proximity being 'ISLAND'") +
  theme(plot.title = element_text(hjust = 0.5))

housingtrain %>% filter(ocean_proximity == '<1H OCEAN') %>%
  ggplot(aes(longitude,median_house_value)) + geom_point() + geom_smooth() +
  labs(title = "Relationship between longitude and median_house_value \n with ocean_proximity being '<1H OCEAN'") +
  theme(plot.title = element_text(hjust = 0.5))
```
```{r}
housingtrain %>% 
  ggplot(aes(longitude,ocean_proximity)) + geom_point() + geom_smooth() +
  labs(title = 'Relationship between \n ocean_proximity and longitude') +
  theme(plot.title = element_text(hjust = 0.5))
```
The slope of longitude changes with different categories of ocean_proximity. Longitude and ocean_proximity seem not to be correlated. Thus we will add this interaction term to our model. 

### Regression model with interaction terms
```{r}
reg6 <- lm(median_house_value ~ median_income + housing_median_age + logTotalRooms + logHouseholds + longitude + latitude + latitude:ocean_proximity + longitude:ocean_proximity + I(median_income^2) + I(median_income^3) + I(logPopulation^2) + I(logTotalBedrooms^2) + I(latitude^3) + I(longitude^3), housingtrain)
summary(reg6)
```
The p-values of I(latitude^3) and ocean_proximityISLAND are not statistically significant (0.55 and 0.15 respectively). We realize that the ISLAND category of ocean_proximity has just 4 data points. We will remove those to eliminate this category

```{r}
summary(housingtrain)
housingtrain2 <- housingtrain %>%
  filter(ocean_proximity!='ISLAND')

reg7 <- lm(median_house_value ~ housing_median_age + logTotalRooms + logHouseholds + longitude + latitude + latitude:ocean_proximity + longitude:ocean_proximity + I(median_income^2) + I(median_income^3) + I(logPopulation^2) + I(logTotalBedrooms^2) + I(longitude^3), housingtrain2)
summary(reg7)
NA_integer_
```
The Adjusted R-squared is 0.6959 which is so far the best model we can create. We will use the test set to validate and move ahead with this model.

```{r}
housingtest2 <- housingtest %>%
  filter(ocean_proximity != "ISLAND")
reg8 <- lm(median_house_value ~ housing_median_age + logTotalRooms + logHouseholds + longitude + latitude + latitude:ocean_proximity + longitude:ocean_proximity + I(median_income^2) + I(median_income^3) + I(logPopulation^2) + I(logTotalBedrooms^2) + I(longitude^3), housingtest2)
summary(reg8)
```
The Adjusted R-squared in the test set is 0.6982 which is roughly equal to the Adjusted R-squared in the training set. 

## Explain the model
```{r}
coeftest(reg7,vcov = vcovHC(reg7,type = "HC1"))

summary(reg7)
```

According to the linear regression model, 
- When all variables equal 0, median_house_value equals -2.257*10^7
- When housing_median_age increases by 1, median_house_value increases by 1.084*10^3
- When logTotalRooms increases by 1, median_house_value decreases by 4.840*10^4
- When logHouseholds increases by 1, median_house_value increases by 3.571*10^4
- When latitude increases by 1, median_house_vallue increases by (-2.797\*10^4 + 3.493e\*10^3 \*ocean_proximityINLAND - 1.064\*10^5 \*ocean_proximityISLAND - 1.342\*10^5\*ocean_proximityNEARBAY + 1.053\*10^4\*ocean_proximityNEAROCEAN)
- When longitude increases by 1, median_house_vallue increases by (-2.848\*10^5 + 1.322\*10^3 \*ocean_proximityINLAND - 3.070\*10^4 \*ocean_proximityISLAND - 4.154\*10^4\*ocean_proximityNEARBAY + 3.034\*10^4\*ocean_proximityNEAROCEAN)

The p-values for all variables, except for longitude:ocean_proximityINLAND, are statistically significant since their p-values are below 0.05. This indicates that the probability that we get our data when the intercept and the coefficients equal 0 is low so the intercept and the coefficients are not equal to 0. 

The multiple R-squared is 0.6957 indicating that 69.57% of variation of median_house_value is explained by the model above. This is a fairly good R-squared. 

## Validate the model
### Check for normality

Since the size of the data set is too large, there is an error when we try running the Shapiro -Wilk normality test. We will create a histogram and a q-q plot to validate normality.

```{r}
housingtrain3 <- housingtrain2 %>%
  mutate(res = resid(reg7), fit = fitted(reg7))

housingtrain3 %>% ggplot(aes(res)) +
  geom_histogram() +
  labs(title = "Histogram of residuals") +
  theme(plot.title = element_text(hjust = 0.5))

qqnorm(housingtrain3$res)
```
The histogram of residuals indicates that the residuals are a little bit left skewed but not too much and it is centered at 0. We also use the q-q plot to validate the normality. The q-q plot plots the quantiles of the residuals against quantiles of a standard normal distribution. Although the plot has a little curve, it mainly looks like a line so it is likely that the residuals are normally distributed.

### Check for homoskedasticity and exogeineity 

```{r}
housingtrain3 %>% ggplot(aes(fit,res)) +
  geom_point() +
  labs(title = 'Scatter plot of fitted values and residuals') +
  theme(plot.title = element_text(hjust = 0.5))

ncvTest(reg7)
```
The p-value of the ncv test is low (<0.05). However, as we have more than 10,000 data points and the ncv test is sensitive when it comes to more than 100 data points, we should look at the plot instead. Looking at the plot, we can see that the points spread out and they seem to have equal variances. Also, the expected value seems to be 0. This validates homoskedasticity and exogeneity. However, there is some outliers that form a line in our residual plot. This is something we should pay attention to and spend some time in the future to find out why the plot has those outliers.

## Predict

```{r}
confint(reg7, level=0.95)

newdata = data.frame(longitude = -122.27, latitude = 37.82, housing_median_age = 43, median_income = 1.5045, ocean_proximity = "NEAR BAY", logTotalRooms = log(1868), logTotalBedrooms = log(456), logPopulation = log(1061), logHouseholds = log(407))
predict(reg7,newdata,interval = "predict")

newdata1 = data.frame(longitude = -121.96, latitude = 37.53, housing_median_age = 28, median_income = 4.9615, ocean_proximity = "<1H OCEAN", logTotalRooms = log(2949), logTotalBedrooms = log(529), logPopulation = log(1538), logHouseholds = log(545))
predict(reg7,newdata1,interval = "predict")
```
Given all the other variables, the predicted median_house_value is 167527.4 and 262137.1 respectively
